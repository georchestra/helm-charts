{{- $webapp := .Values.georchestra.webapps.geonetwork.kibana -}}
{{- if and .Values.georchestra.webapps.geonetwork.enabled $webapp.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "georchestra.fullname" . }}-gn4-kibana
  labels:
    {{- include "georchestra.labels" . | nindent 4 }}
    app.kubernetes.io/component: {{ include "georchestra.fullname" . }}-gn4-kibana
spec:
  replicas: {{ $webapp.replicaCount }}
  selector:
    matchLabels:
      {{- include "georchestra.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: {{ include "georchestra.fullname" . }}-gn4-kibana
  template:
    metadata:
      labels:
        {{- include "georchestra.selectorLabels" . | nindent 8 }}
        org.georchestra.service/name: {{ include "georchestra.fullname" . }}-gn4-kibana
        app.kubernetes.io/component: {{ include "georchestra.fullname" . }}-gn4-kibana
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
        {{- with .Values.georchestra.nodeSelector }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      containers:
      - name: kibana
        image: {{ $webapp.image }}
        env:
          - name: ELASTICSEARCH_HOSTS
            value: http://{{ include "georchestra.fullname" . }}-gn4-elasticsearch-svc:9200
          - name: ELASTICSEARCH_USERNAME
            value: "kibana_system"
          - name: ELASTICSEARCH_PASSWORD
            value: {{ $webapp.kibanaSystemPassword | quote }}
        ports:
        - containerPort: 5601
          name: kibana
        livenessProbe:
          httpGet:
            path: /api/status
            port: kibana
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/status
            port: kibana
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
          - mountPath: /usr/share/kibana/config
            name: gn4-kibana-config
        resources:
          {{- toYaml $webapp.resources | nindent 10 }}
      volumes:
      - name: gn4-kibana-config
        configMap:
          name: {{ include "georchestra.fullname" . }}-gn4-kibana-config
      {{- if $webapp.tolerations }}
      tolerations:
        {{- $webapp.tolerations | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.hostAliases }}
      hostAliases:
        {{- .Values.hostAliases | toYaml | nindent 8 }}
      {{- end }}
{{- end }}
