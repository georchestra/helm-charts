{{- $webapp := .Values.georchestra.webapps.geonetwork.elasticsearch -}}
{{- if and .Values.georchestra.webapps.geonetwork.enabled $webapp.enabled -}}
{{- $podAnnotations := mergeOverwrite .Values.podAnnotations (default dict $webapp.podAnnotations) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "georchestra.fullname" . }}-gn4-elasticsearch
  labels:
    {{- include "georchestra.labels" . | nindent 4 }}
    app.kubernetes.io/component: {{ include "georchestra.fullname" . }}-gn4-elasticsearch
spec:
  replicas: {{ $webapp.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "georchestra.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: {{ include "georchestra.fullname" . }}-gn4-elasticsearch
  template:
    metadata:
      labels:
        {{- include "georchestra.selectorLabels" . | nindent 8 }}
        org.georchestra.service/name: {{ include "georchestra.fullname" . }}-gn4-elasticsearch
        app.kubernetes.io/component: {{ include "georchestra.fullname" . }}-gn4-elasticsearch
      annotations:
        {{- toYaml $podAnnotations | nindent 8 }}
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
        {{- with .Values.georchestra.nodeSelector }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      securityContext:
        fsGroup: 1000
      initContainers:
      - name: fix-permissions-pvc
        image: "{{ .Values.tooling.general.image.repository }}:{{ .Values.tooling.general.image.tag }}"
        command: ["sh", "-c", "chown -R 1000:1000 /usr/share/elasticsearch/data"]
        volumeMounts:
        - mountPath: /usr/share/elasticsearch/data
          name: gn4-es-data
      containers:
      - name: elasticsearch
        image: {{ $webapp.image }}
        env:
          - name: ES_JAVA_OPTS
            value: -Dlog4j2.formatMsgNoLookups=true -Dlog4j2.disable.jmx=true
          - name: discovery.type
            value: single-node
          - name: xpack.security.transport.ssl.enabled
            value: "false"
          - name: xpack.security.http.ssl.enabled
            value: "false"
          - name: ELASTIC_PASSWORD
            value: {{ $webapp.elasticPassword | quote }}
        ports:
        - containerPort: 9200
          name: elastic
        livenessProbe:
          exec:
            command:
              - sh
              - -c
              - 'curl -u elastic:$ELASTIC_PASSWORD -fsSL http://localhost:9200/_cluster/health > /dev/null'
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        readinessProbe:
          exec:
            command:
              - sh
              - -c
              - |
                status=$(curl -u elastic:$ELASTIC_PASSWORD -fsSL http://localhost:9200/_cluster/health | grep -oP '"status":"\K[^"]+')
                [ "$status" = "green" ] || [ "$status" = "yellow" ]
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
          successThreshold: 1
        volumeMounts:
          - mountPath: /usr/share/elasticsearch/data
            name: gn4-es-data
        resources:
          {{- toYaml $webapp.resources | nindent 10 }}
      volumes:
      - name: gn4-es-data
        persistentVolumeClaim:
          claimName: {{ include "georchestra.fullname" . }}-gn4-es-data
      {{- if $webapp.tolerations }}
      tolerations:
        {{- $webapp.tolerations | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.hostAliases }}
      hostAliases:
        {{- .Values.hostAliases | toYaml | nindent 8 }}
      {{- end }}
{{- end }}

