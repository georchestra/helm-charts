{{- if and .Values.georchestra.webapps.datafeeder.enabled .Values.georchestra.webapps.datafeeder_frontend.enabled -}}
{{- $webapp := .Values.georchestra.webapps.datafeeder -}}
{{- $database := .Values.database -}}
{{- $database_secret_datafeeder_name := printf "%s-database-datafeeder-secret" (include "georchestra.fullname" .) -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "georchestra.fullname" . }}-datafeeder
  labels:
    {{- include "georchestra.labels" . | nindent 4 }}
    app.kubernetes.io/component: {{ include "georchestra.fullname" . }}-datafeeder
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "georchestra.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: {{ include "georchestra.fullname" . }}-datafeeder
  template:
    metadata:
      labels:
        {{- include "georchestra.selectorLabels" . | nindent 8 }}
        org.georchestra.service/name: {{ include "georchestra.fullname" . }}-datafeeder
        app.kubernetes.io/component: {{ include "georchestra.fullname" . }}-datafeeder
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      initContainers:
      {{- include "georchestra.bootstrap_georchestra_datadir" . | nindent 6 }}
      {{- if .Values.georchestra.webapps.datafeeder.envsubst.enabled }}
      - name: envsubst
        image: georchestra/k8s-initcontainer-envsubst
        volumeMounts:
        - mountPath: /etc/georchestra
          name: georchestra-datadir
        env:
        - name: DEBUG
          value: "yes"
        - name: SUBST_FILES
          value: "/etc/georchestra/datafeeder/frontend-config.json"
          {{- include "georchestra.common-envs" . | nindent 8 }}
      {{- end }}

      containers:
      - name: georchestra-datafeeder
        image: {{ $webapp.docker_image }}
        imagePullPolicy: Always
        env:
        {{- include "georchestra.common-envs" . | nindent 8 }}
        {{- include "georchestra.database-georchestra-envs" . | nindent 8 }}
        {{ if $database.builtin }}
        {{- $database_secret_datafeeder_name = printf "%s-database-datafeeder-secret" (include "georchestra.fullname" .) -}}
        - name: DF_PGHOST
          value: "{{ .Release.Name }}-database"
        - name: DF_PGDATABASE
          value: "datafeeder"
        {{ else }}
        {{- $database_secret_datafeeder_name = $database.datafeeder.auth.existingSecret -}}
        - name: DF_PGHOST
          valueFrom:
            secretKeyRef:
                name: {{ $database_secret_datafeeder_name }}
                key: host
                optional: false
        - name: DF_PGDATABASE
          valueFrom:
            secretKeyRef:
                name: {{ $database_secret_datafeeder_name }}
                key: dbname
                optional: false
        {{ end }}
        - name: DF_PGPORT
          valueFrom:
            secretKeyRef:
                name: {{ $database_secret_datafeeder_name }}
                key: port
                optional: false
        - name: DF_PGUSER
          valueFrom:
            secretKeyRef:
                name: {{ $database_secret_datafeeder_name }}
                key: user
                optional: false
        - name: DF_PGPASSWORD
          valueFrom:
            secretKeyRef:
                name: {{ $database_secret_datafeeder_name }}
                key: password
                optional: false
          {{- if $webapp.extra_environment }}
          {{- $webapp.extra_environment | toYaml | nindent 8 }}
          {{- end }}
        ports:
        - containerPort: 8080
          name: http-proxy
        volumeMounts:
          - mountPath: /etc/georchestra
            name: georchestra-datadir
          - mountPath: /tmp/datafeeder
            name: datafeeder-uploads
        livenessProbe:
          tcpSocket:
            port: http-proxy
          periodSeconds: 10
          initialDelaySeconds: 20
      volumes:
      - name: georchestra-datadir
        emptyDir: {}
      - name: datafeeder-uploads
        emptyDir: {}
      {{- if .Values.georchestra.datadir.git.ssh_secret }}
      - name: ssh-secret
        secret:
          secretName: {{ .Values.georchestra.datadir.git.ssh_secret }}
          defaultMode: 0400
      {{- end }}
      {{- if $webapp.registry_secret }}
      imagePullSecrets:
      - name: {{ $webapp.registry_secret }}
      {{- end }}
{{- end }}
