name: Helm publish new version

on:
  push:
    branches:
      - 'main'

jobs:
  chart-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write # to push chart release and create a release (helm/chart-releaser-action)
      packages: write # needed for ghcr access
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      # Need to do that because helm releaser does not support repo with single chart
      # https://github.com/helm/chart-releaser-action/issues/87
      # Could move into a subfolder but fear of loosing all the history of the various files
      - name: Checkout main branch into a subsubfolder
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: charts/georchestra

      - name: Configure Git + add charts folder for git tracking with chart releaser
        run: |
          git add charts
          git config --global user.name "$GITHUB_ACTOR"
          git config --global user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.12.0

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.5.0
        with:
          charts_dir: charts
          config: cr.yaml
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          CR_SKIP_EXISTING: "true"

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push charts to GHCR
        run: |
          shopt -s nullglob
          for pkg in .cr-release-packages/*.tgz; do
            if [ -z "${pkg:-}" ]; then
              break
            fi
            CHART_NAME=$(echo ${pkg##*/} | grep -oP '^.*?(?=-[0-9])')
            CHART_VERSION=$(echo ${pkg##*/} | grep -Po '(?<=-)[0-9][^/]*?(?=\.tgz)')
            if helm show all "oci://ghcr.io/${GITHUB_REPOSITORY}/${CHART_NAME}" --version "$CHART_VERSION" > /dev/null 2>&1; then
              echo "Helm chart $CHART_NAME with version $CHART_VERSION already exist."
            else
              helm push "${pkg}" "oci://ghcr.io/${GITHUB_REPOSITORY}"
            fi
          done
